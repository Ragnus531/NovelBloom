@page "/novel-detail/{SetHashCode:int}"

@using NovelBloom.Models
@using NovelBloom.Styles
@using NovelBloom.Utils

<style>
    .myImage {
        max-width: 100vw;
        height: auto;
        max-height: 100vh;
        width: auto;
    }

    .read-now-button {
        background-color: #e67e22; /* Darker orange */
        color: white; /* Text color */
        border: none; /* Remove border */
        padding: 10px 20px; /* Padding for comfortable text space */
        font-size: 16px; /* Readable font size */
        border-radius: 5px; /* Slight rounding for a modern look */
        cursor: pointer; /* Pointer to indicate it’s clickable */
        width: 140px; /* Fixed width */
        text-align: center; /* Ensure text is centered */
        display: block; /* Block element to ensure it’s easy to position */
        margin: 20px auto; /* Center it horizontally with margin */
        transition: background-color 0.3s ease; /* Smooth hover effect */
    }

        .read-now-button:hover {
            background-color: #d35400; /* Darker shade on hover */
        }

</style>

@if (Novel != null)
{
    <MudText Typo="Typo.h4">@Novel.Title</MudText>
    <MudText Typo="Typo.subtitle2" Class="mt-1">by @Novel.User.UserNick</MudText>
    <MudImage Src="images/defaultimage.jpeg" Height="150" Class="rounded-lg myImage" />

    <MudText Typo="Typo.body1"><b>@Novel.ShortDescription</b></MudText>

    <MudStack AlignItems="AlignItems.Center" JustifyContent="Center">
        <MudButtonGroup Color="Color.Secondary" Size="Size.Medium" Variant="Variant.Filled">
            <MudButton StartIcon="@Icons.Material.Filled.Cyclone">Like</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.Bookmark">Bookmark</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.Share">Share</MudButton>
        </MudButtonGroup>
    </MudStack>

    <MudButton class="read-now-button"  Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.AutoStories" @onclick="() => GoToNovelDetail()">Read Now</MudButton>


    <MudDivider Class="mt-2 mb-2" />

    <MudText Typo="Typo.body2"><b>Lucas Johnson</b></MudText>
    <MudText Typo="Typo.subtitle2">April 12,2023</MudText>
    <MudText Typo="Typo.body2"><b>Absolutely loved the twist at the end! Can't wait to read more from this author.</b></MudText>

    <MudText Class="mt-3" Typo="Typo.body2"><b>Sophia Williams</b></MudText>
    <MudText Typo="Typo.subtitle2">April 11,2023</MudText>
    <MudText Typo="Typo.body2"><b>The imagery in this story is breathtaking. Felt like i was right there in the forest.</b></MudText>

    <MudDivider Class="mt-2 mb-2" />

    <MudGrid>
        <MudItem xs="9">
            <MudTextField @bind-Value="TextValue" Label="Leave a comment..." Variant="Variant.Outlined"></MudTextField>
        </MudItem>
        <MudItem xs="3" Class="mt-1">
            <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Add" />
        </MudItem>
    </MudGrid>
}
else
{
    <p>Loading...</p>
}

@code {

    private Novel Novel { get; set; }
    private bool _suppressRender;

    public string TextValue { get; set; }

    [Inject] private StateContainer StateContainer { get; set; } = default!;
    [Inject] private NavigationManager NavigationManager { get; set; } = default!;

    [Parameter] public int SetHashCode { get; set; }

    protected override bool ShouldRender()
    => !_suppressRender;

    protected override void OnInitialized()
    {
        var data = (Novel)StateContainer.ObjectTunnel[SetHashCode];
        Novel = data;
    }

    private void GoToNovelDetail()
    {
        _suppressRender = true;
        var hashCode = Novel.GetHashCode();
        StateContainer.ObjectTunnel.Add(hashCode, Novel);
        NavigationManager.NavigateTo($"/novel-detail-story/{hashCode}");
    }
}
